<UserControl x:Class="Fiddler.LocalRedirect.View.LocalRedirect"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:doc="http://schemas.microsoft.com/xps/2005/06/documentstructure"
             xmlns:config="clr-namespace:Fiddler.LocalRedirect.Model"             
             xmlns:view="clr-namespace:Fiddler.LocalRedirect.View"
             mc:Ignorable="d" AllowDrop="True" Height="372.903" Width="477.398">
    <UserControl.Resources>        
        <BitmapImage x:Key="imgHttps" UriSource="/Fiddler.LocalRedirect;component/images/lock_open.png" />

        <Style x:Key="ItemPadding" TargetType="FrameworkElement">
            <Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="SettingStyle" TargetType="FrameworkElement">
            <Setter Property="Margin" Value="2,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>        


        <DataTemplate DataType="{x:Type config:BrowserLink}">
            <Grid >                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" >Enable browser link.</TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:HeaderScript}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Grid.Column="0"><Hyperlink Click="OnSetHeaderScriptClick">Inject in head</Hyperlink></TextBlock>
                <TextBlock Style="{StaticResource SettingStyle}" Grid.Column="1" Text="{Binding HtmlFragmentPath}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:Redirect}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Grid.Column="0" Text="Redirect to:"></TextBlock>
                <TextBox  Style="{StaticResource SettingStyle}" Grid.Column="1" Text="{Binding ToHost, UpdateSourceTrigger=PropertyChanged}" Width="300" ></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:OverrideDNS}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Grid.Column="0" Text="Override DNS:"></TextBlock>
                <TextBox  Style="{StaticResource SettingStyle}" Grid.Column="1" Text="{Binding ToHost, UpdateSourceTrigger=PropertyChanged}" Width="300" ></TextBox>
                <TextBlock Style="{StaticResource SettingStyle}" Grid.Column="2" Text=":"></TextBlock>
                <TextBox  Style="{StaticResource SettingStyle}" Grid.Column="3" Text="{Binding ToPort, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceUnminified}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Text="Force unmin .js/.css"></TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceSharepointDebugJavascript}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Text="Force SP .debug.js"></TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:JavascriptCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Text="Combine Js to head."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:CSSCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SettingStyle}" Text="Combine css to head."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>


    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>            
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ToolBarTray>
            <ToolBar>
                <Button Content="Open" Click="OnBtnOpenClick"/>
                <Button Content="Save As" Click="OnBtnSaveClick"/>
            </ToolBar>
            <ToolBar>
                <Button Content="Add" Click="OnBtnAddClick"/>
            </ToolBar>
        </ToolBarTray>
        <DataGrid Grid.Row="1" ItemsSource="{Binding UrlRules}" CanUserAddRows="False" CanUserDeleteRows="True" AutoGenerateColumns="False"  Grid.RowSpan="2" AllowDrop="True" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" GridLinesVisibility="Horizontal"  RowDetailsVisibilityMode="Collapsed">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <!--<Setter Property="FontStyle" Value="Oblique" />-->
                    <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Viewbox StretchDirection="Both" Stretch="Uniform" Height="16" Width="16">
                                <Expander 
                                    Name="ShowDetails" 
                                    IsExpanded="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},
                                    Path=DetailsVisibility, 
                                    Converter={view:VisibilityToBooleanConverter}, 
                                    Mode=TwoWay,
                                    NotifyOnSourceUpdated=True,
                                    NotifyOnTargetUpdated=True,
                                    UpdateSourceTrigger=PropertyChanged}" 
                                    Margin="0,0,0,0">                                    
                                </Expander>
                            </Viewbox>                                                        
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="False" Width="Auto" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Stretch="Uniform" Width="12" Height="12">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="Source" Value="{StaticResource imgHttps}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Scheme, UpdateSourceTrigger=PropertyChanged}" Value="HTTP">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Scheme, UpdateSourceTrigger=PropertyChanged}" Value="HTTPS">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="E" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ItemPadding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="From url" Binding="{Binding Url, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="39.5,0,0,0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"  >
                        <ListView ItemsSource="{Binding Children}" BorderThickness="0" SelectionMode="Single" FontWeight="Normal" Grid.IsSharedSizeScope="True">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" Style="{StaticResource ItemPadding}" IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                        <ContentPresenter Style="{StaticResource ItemPadding}" Grid.Column="1" Content="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</UserControl>
