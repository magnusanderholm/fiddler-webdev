<UserControl x:Class="Fiddler.LocalRedirect.View.LocalRedirect"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:doc="http://schemas.microsoft.com/xps/2005/06/documentstructure"
             xmlns:config="clr-namespace:Fiddler.LocalRedirect.Model"             
             xmlns:view="clr-namespace:Fiddler.LocalRedirect.View"
             xmlns:fakeviewmodels="clr-namespace:Fiddler.LocalRedirect.ViewModel.Fakes"
             
             mc:Ignorable="d" AllowDrop="True" Height="372.903" Width="477.398">
    
    <UserControl.Resources>
    
        <fakeviewmodels:FakeViewModel x:Key="DesignViewModel" />
        <BitmapImage x:Key="imgHttps" UriSource="/Fiddler.LocalRedirect;component/images/lock_open.png" />
        <BitmapImage x:Key="imgSettings" UriSource="/Fiddler.LocalRedirect;component/Images/settings_32.png" />
        
        <Style TargetType="{x:Type CheckBox}">            
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
        </Style>


        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>            
            <Setter Property="Margin" Value="0,0,2,0"/>
        </Style>

        <Style TargetType="{x:Type Label}">            
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <!--<Setter Property="FontSize" Value="10" />-->
            <!--<Setter Property="Height" Value="10" />-->
        </Style>
       
        <DataTemplate DataType="{x:Type config:BrowserLink}">
            <Grid >                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label>Enable browser link.</Label>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:DisableCache}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label>Disable cache.</Label>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:InjectFragment}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0">Append script</Label>
                <TextBox Grid.Column="1" Text="{Binding Path=Path, Mode=TwoWay, ValidatesOnExceptions=True}" />
                <Button Grid.Column="2" Content="..." Click="OnSetInjectFragmentClick"/>
                <Label Grid.Column="3">To</Label>

                <TextBox Grid.Column="4" Text="{Binding HtmlSelector, Mode=TwoWay, ValidatesOnExceptions=True}"  />

            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:FileResponse}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>                
                <Label Grid.Column="0" Grid.ColumnSpan="2">Read responses from</Label>
                <TextBox Grid.Column="1" Text="{Binding Path=DirectoryPath, Mode=TwoWay, ValidatesOnExceptions=True}" />                                    
                <Button Grid.Column="2" Click="OnSetFileResponseDirectory">...</Button>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:Redirect}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Content="Redirect to:" VerticalContentAlignment="Top" ></Label>
                <TextBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2"  Text="{Binding ToUrl, ValidatesOnExceptions=True}"  ></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:OverrideDNS}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label  Grid.Column="0" Content="Override DNS:"></Label>
                <TextBox   Grid.Column="1" Text="{Binding ToHost, ValidatesOnExceptions=True}" ></TextBox>
                <Label  Grid.Column="2" Content=":"></Label>
                <TextBox   Grid.Column="3" Text="{Binding ToPort, ValidatesOnExceptions=True}"></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceUnminified}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label  Content="Force unmin .js/.css"></Label>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceSharepointDebugJavascript}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label  Content="Force &lt;url&gt;.debug.js"></Label>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:JavascriptCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label  Content="Combine Js to head."></Label>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:CSSCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label  Content="Combine css to head."></Label>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>

        <ResourceDictionary x:Key="theme">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Aero;component/themes/Aero.NormalColor.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid d:DataContext="{Binding Source={StaticResource DesignViewModel}}">
        <Grid.RowDefinitions>            
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Menu Grid.Column="0" >
                <!-- TODO Add nice looking images. Perhaps a cogwheel instead of File?? -->
                <MenuItem Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" >
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{StaticResource imgSettings}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2" Width="16" Height="16" />
                            <TextBlock Text="File" Margin="0,2" VerticalAlignment="Center"/>
                        </StackPanel>
                    </MenuItem.Header>                    
                    <MenuItem Header="Open" Click="OnBtnOpenClick" />
                    <MenuItem Header="Save As" Click="OnBtnSaveClick" />
                    <Separator />
                    <MenuItem Header="Recent Files" ItemsSource="{Binding SettingsRepository.Mru}" Click="OnBtnRecentFileClick" />
                </MenuItem>
            </Menu>
            <Label Grid.Column="1" Content="{Binding SettingsRepository.CurrentStorage, Mode=OneWay, TargetNullValue=...}" HorizontalAlignment="Right"  />

        </Grid>
        <DataGrid 
            Grid.Row="1" 
            ItemsSource="{Binding SettingsRepository.Settings.UrlRules}"
            CanUserAddRows="False"
            CanUserDeleteRows="True"             
            CanUserReorderColumns="False"
            CanUserResizeColumns="False"
            AutoGenerateColumns="False"             
            Grid.RowSpan="2" 
            AllowDrop="True" 
            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
            BorderThickness="1"
            HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" 
            VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
            GridLinesVisibility="Horizontal"              
            RowDetailsVisibilityMode="Collapsed" RowHeaderWidth="0" HeadersVisibility="Column" >
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <!--<Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>-->
                    <!--<Setter Property="FontStyle" Value="Oblique" />-->
                    <!--<Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />-->
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn IsReadOnly="True" Width="16" >
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">                            
                            <Setter Property="BorderThickness" Value="0"/>                            
                        </Style>
                    </DataGridTemplateColumn.CellStyle>                    
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Viewbox Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <Expander                                     
                                    Name="ShowDetails" 
                                    IsExpanded="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},
                                    Path=DetailsVisibility, 
                                    Converter={view:VisibilityToBooleanConverter}, 
                                    Mode=TwoWay,
                                    NotifyOnSourceUpdated=True,
                                    NotifyOnTargetUpdated=True,
                                    UpdateSourceTrigger=PropertyChanged}" >                                    
                                </Expander>
                            </Viewbox>                                                        
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <CheckBox IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}"  />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="False" Width="Auto" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Stretch="Uniform" Width="12" Height="12">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="Source" Value="{StaticResource imgHttps}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Url.Scheme, UpdateSourceTrigger=PropertyChanged}" Value="http">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Url.Scheme, UpdateSourceTrigger=PropertyChanged}" Value="https">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                

                <DataGridTextColumn Header="Url" Binding="{Binding UrlString, ValidatesOnExceptions=True, UpdateSourceTrigger=LostFocus}" Width="*" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>    
                </DataGridTextColumn>
                
                <DataGridTemplateColumn Header="" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="12" Width="12" Click="OnSelectUrlRuleColor">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1"  >
                                            <Rectangle Fill="{Binding HtmlColor, TargetNullValue='Transparent'}"  />
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}" Margin="0" >
                        <ListView Margin="40,0,0,0"  ItemsSource="{Binding Modifiers}" BorderThickness="0" SelectionMode="Single" FontWeight="Normal" Grid.IsSharedSizeScope="True" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"  IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                        <ContentPresenter Grid.Column="1"  Content="{Binding}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</UserControl>
