<UserControl x:Class="Fiddler.LocalRedirect.View.LocalRedirect"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:doc="http://schemas.microsoft.com/xps/2005/06/documentstructure"
             xmlns:config="clr-namespace:Fiddler.LocalRedirect.Config"             
             xmlns:view="clr-namespace:Fiddler.LocalRedirect.View"
             mc:Ignorable="d" AllowDrop="True" Height="372.903" Width="477.398">
    <UserControl.Resources>
        <BitmapImage x:Key="imgHttp" UriSource="/images/lock_open.png" />
        <BitmapImage x:Key="imgHttps" UriSource="/images/lock_open.png" />
        
        <Style x:Key="ItemPadding" TargetType="FrameworkElement">
            <Setter Property="Margin" Value="2,2,0,0" />
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
                
       
        <DataTemplate DataType="{x:Type config:BrowserLink}">
            <Grid>
                <TextBlock>Enable browser link.</TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:HeaderScript}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"><Hyperlink Click="OnSetHeaderScriptClick">Inject html fragment in head</Hyperlink></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding HtmlFragmentPath}" />
            </Grid>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type config:Redirect}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Redirect to:"></TextBlock>
                <TextBox Grid.Column="1" Text="{Binding ToHost, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceUnminified}">
            <Grid>                
                <TextBlock Text="Force unminfied js and css."></TextBlock>                
            </Grid>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type config:JavascriptCombiner}">
            <Grid>
                <TextBlock Text="Concatenate all javascript and put in header."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type config:CSSCombiner}">
            <Grid>
                <TextBlock Text="Concatenate all css and put in header."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>

        
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <!-- TODO Replace this with a TreeView instead???-->
            <!-- TODO Need a toolbar row with export, import, add and delete buttons. -->
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>            
        </Grid.RowDefinitions>
        <ToolBarTray>
            <ToolBar>
                <Button Content="Open.." Click="OnBtnOpenClick"/>
                <Button Content="Save.." Click="OnBtnSaveClick"/>
            </ToolBar>
            <ToolBar>
                <Button Content="Add.." Click="OnBtnAddClick"/>
            </ToolBar>
        </ToolBarTray>
        <DataGrid Grid.Row="1" ItemsSource="{Binding UrlRules}" CanUserAddRows="False" CanUserDeleteRows="True" AutoGenerateColumns="False"  Grid.RowSpan="2" AllowDrop="True" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderThickness="1" HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" GridLinesVisibility="Horizontal" >
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Setter Property="FontStyle" Value="Oblique" />                    
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton 
                            Name="ShowDetails" 
                            IsChecked="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, 
                            Path=DetailsVisibility, 
                            Converter={view:VisibilityToBooleanConverter}, 
                            Mode=TwoWay}"  Margin="4" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="True" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="16" Height="16">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Scheme, UpdateSourceTrigger=PropertyChanged}" Value="HTTP">
                                                <Setter Property="Source" Value="{StaticResource imgHttps}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Scheme, UpdateSourceTrigger=PropertyChanged}" Value="HTTPS">
                                                <Setter Property="Source" Value="{StaticResource imgHttp}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="E" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <!-- TODO Remake Scheme column into a icon column. PadLock for https url's. Probably put it before the enabled button. -->                
                <DataGridTextColumn Header="From url" Binding="{Binding Url}" Width="*"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>                    
                    <Grid Margin="40,0,0,0">                        
                        <ListView ItemsSource="{Binding Children}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" Style="{StaticResource ItemPadding}" IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                        <ContentPresenter Style="{StaticResource ItemPadding}" Grid.Column="1" Content="{Binding}"/>
                                    </Grid>                                    
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>                                                          
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</UserControl>
