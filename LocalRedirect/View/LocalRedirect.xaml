<UserControl x:Class="Fiddler.LocalRedirect.View.LocalRedirect"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:doc="http://schemas.microsoft.com/xps/2005/06/documentstructure"
             xmlns:config="clr-namespace:Fiddler.LocalRedirect.Model"             
             xmlns:view="clr-namespace:Fiddler.LocalRedirect.View"
             xmlns:fakeviewmodels="clr-namespace:Fiddler.LocalRedirect.ViewModel.Fakes"
             
             mc:Ignorable="d" AllowDrop="True" Height="372.903" Width="477.398">
    <UserControl.Resources>

        <fakeviewmodels:FakeViewModel x:Key="DesignViewModel" />
        <BitmapImage x:Key="imgHttps" UriSource="/Fiddler.LocalRedirect;component/images/lock_open.png" />

        <!--<Style x:Key="ItemPadding" TargetType="FrameworkElement">
            --><!--<Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>--><!--
        </Style>-->

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="Yellow"/>
        </Style>


        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />            
        </Style>

        <!--<Style x:Key="ItemPadding" TargetType="FrameworkElement">
            --><!--<Setter Property="Margin" Value="2,2,2,2" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>--><!--
        </Style>-->

        <!--<Style x:Key="SettingStyle" TargetType="FrameworkElement">
            --><!--<Setter Property="Margin" Value="2,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>--><!--
        </Style>-->        


        <DataTemplate DataType="{x:Type config:BrowserLink}">
            <Grid >                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock>Enable browser link.</TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:DisableCache}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock>Disable cache.</TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:InjectFragment}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                    <TextBlock>Append
                        <Hyperlink Click="OnSetInjectFragmentClick">
                            <Run Text="{Binding Path=Path, TargetNullValue='...'}" />
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock Text=" to "/>
                    <TextBox Text="{Binding HtmlSelector, ValidatesOnExceptions=True}" MinWidth="100" VerticalAlignment="Stretch"/>
                </StackPanel>                                
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:FileResponse}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>                
                <TextBlock Grid.Column="0" Grid.ColumnSpan="2">
                    Read responses from 
                    <Hyperlink Click="OnSetFileResponseDirectory" >
                        <Run Text="{Binding Path=DirectoryPath, TargetNullValue='...'}" />
                    </Hyperlink>
                </TextBlock>                
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:Redirect}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Redirect to:" ></TextBlock>
                <TextBox   Grid.Column="1" Text="{Binding ToUrl, ValidatesOnExceptions=True}" MinWidth="150" ></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:OverrideDNS}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Grid.Column="0" Text="Override DNS:"></TextBlock>
                <TextBox   Grid.Column="1" Text="{Binding ToHost, ValidatesOnExceptions=True}" MinWidth="150" ></TextBox>
                <TextBlock  Grid.Column="2" Text=":"></TextBlock>
                <TextBox   Grid.Column="3" Text="{Binding ToPort, ValidatesOnExceptions=True}"></TextBox>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceUnminified}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Text="Force unmin .js/.css"></TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:ForceSharepointDebugJavascript}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Text="Force &lt;url&gt;.debug.js"></TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:JavascriptCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Text="Combine Js to head."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type config:CSSCombiner}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LabelGroup"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock  Text="Combine css to head."></TextBlock>
                <!-- TODO Checkbox indicating wether the element shall be async or not-->
            </Grid>
        </DataTemplate>


    </UserControl.Resources>
    <Grid d:DataContext="{Binding Source={StaticResource DesignViewModel}}">
        <Grid.RowDefinitions>            
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Menu>
                <!-- TODO Add nice looking images. -->
                <MenuItem Header="File" Grid.Column="0">
                    <MenuItem Header="Open" Click="OnBtnOpenClick" />
                    <MenuItem Header="Save As" Click="OnBtnSaveClick" />
                    <Separator />
                    <MenuItem Header="Recent Files" ItemsSource="{Binding SettingsRepository.Mru}" Click="OnBtnRecentFileClick" />
                </MenuItem>
            </Menu>
            <TextBlock Grid.Column="1" Text="{Binding SettingsRepository.CurrentFile, Mode=OneWay, TargetNullValue=...}" HorizontalAlignment="Right"  />

        </Grid>
        <DataGrid 
            Grid.Row="1" 
            ItemsSource="{Binding UrlRules}"
            CanUserAddRows="False"
            CanUserDeleteRows="True"             
            AutoGenerateColumns="False"             
            Grid.RowSpan="2" 
            AllowDrop="True" 
            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
            BorderThickness="1"
            HorizontalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" 
            VerticalGridLinesBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
            GridLinesVisibility="Horizontal"              
            RowDetailsVisibilityMode="Visible" >
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <!--<Setter Property="FontStyle" Value="Oblique" />-->
                    <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>                
                <DataGridTemplateColumn IsReadOnly="True" >                    
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Viewbox StretchDirection="Both" Stretch="Uniform" Height="16" Width="16">
                                <Expander 
                                    Name="ShowDetails" 
                                    IsExpanded="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},
                                    Path=DetailsVisibility, 
                                    Converter={view:VisibilityToBooleanConverter}, 
                                    Mode=TwoWay,
                                    NotifyOnSourceUpdated=True,
                                    NotifyOnTargetUpdated=True,
                                    UpdateSourceTrigger=PropertyChanged}" 
                                    Margin="0,0,0,0">                                    
                                </Expander>
                            </Viewbox>                                                        
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn CanUserSort="False" Width="Auto" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Stretch="Uniform" Width="12" Height="12">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="Source" Value="{StaticResource imgHttps}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Url.Scheme, UpdateSourceTrigger=PropertyChanged}" Value="http">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Url.Scheme, UpdateSourceTrigger=PropertyChanged}" Value="https">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="E" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}"  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Url" Binding="{Binding UrlString, ValidatesOnExceptions=True, UpdateSourceTrigger=LostFocus}" Width="*"/>
                
                <DataGridTemplateColumn Header="" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Height="8" Width="8" Click="OnSelectUrlRuleColor">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Border BorderBrush="Black" BorderThickness="1"  >
                                            <Rectangle Fill="{Binding HtmlColor, TargetNullValue='Transparent'}"  />
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>                            
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="35,0,0,0" Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"  >
                        <ListView ItemsSource="{Binding Modifiers}" BorderThickness="0" SelectionMode="Single" FontWeight="Normal" Grid.IsSharedSizeScope="True">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0"  IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                        <ContentPresenter  Grid.Column="1" Content="{Binding}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</UserControl>
